<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
	<head>
		<title>HTTP UserAgent cleaner</title><!--#include file="links.inc"-->		<meta name="description" content="Функции вкладки Сторонние: режимы исполнения фильтров">
	</head>
	<body><DIV align = center >
<DIV id=maindiv>
		<!--#include file="_begin.inc"-->			<H1>Дополнение для FireFox "HTTP UserAgent cleaner" - справка</H1>			<br><br>			<!--#include file="_support.inc"-->			<br>			<hr>			<br><br>			<!--a href="">Help in screenshots</a>			<br><br-->			<!--Справка (только на русском) -->			<br><br>				Фильтры вкладки "Сторонние" могут работать в двух разных режимах исполнения: немедленного исполнения и исполнения на листьях. Кроме этого, у них есть режим логирования.<br>				<br>				Для начала о режиме исполнения.<br>				Фильтры с <img src='i2/greencircle.png' />зелёным кружком работают непосредственно, если выполнено условие правила (режим немедленного выполнения).				<br>				Фильтры с <img src='i2/redtriangle.png' />красным треугольником не выполняются, если выполнено условие правила. Они выполняются только для правил, подчинённых данному (сразу же или через уровни других правил), причём со следующими условиями:<br>				<br>1. Правило не имеет потомков (правило-лист). Выключенное подчинённое правило тоже считается за потомка несмотря на то, что оно выключено.				<br>2. На правиле-листе нет переопределяющего фильтра (в любом режиме исполнения).				<br>3. Справделивы обычные правила приоритетов. Фильтр, исполняющийся на листьях, при его раскрытии, заменяется фильтрами немедленного исполнения. У этих фильтров приоритет правила-листа, на котором они исполняются.				<br>Естественно, для выполнения фильтра требуется выполнение условия правила-листа (включая все условия правил над этим листом, как обычно).				<br><br><br>				Давайте попробуем посмотреть на работу этих фильров на примере. Допустим, мы хотим заблокировать все запросы, кроме запросов к yandex.ru . Для простоты, будем считать, что у нас пока нет правил в дополнении.				<br>				Для начала создадим правило, блокирующее все запросы.				<br><img src='i2/R1.png'><br><br>				Проверим на любом сайте: действительно, запросы блокируются. Теперь мы хотим разрешить посещение yandex.ru . Создадим подчинённое правило, которое определяет соответствующее поведение.				<br><img src='i2/R2.png'><br><br>				Теперь мы можем зайти на yandex.ru , включая его поддомены. Однако, мы не ограничиваем ни его поддомены, ни запросы на другие сайты.<br>				Давайте разрешим заход на главную страницу "yandex.ru" и на сайт "translate.yandex.ru", а на всё остальное - запретим.				<br><img src='i2/R3.png'><br><br>				Как видим, нам пришлось поработать: в том числе, добавить два фильтра "Request:-" к двум новым правилам и снять один у старого.				<br><br>				Этого можно было бы избежать. Давайте снимем все фильтры "Request: -".				<br><img src='i2/R4.png'><br><br>				Теперь добавим к верхнему правилу ещё один фильтр "Request".				<br><img src='i2/R5.png'><br><br>				Получим следующее.				<br><img src='i2/R6.png'><br><br>				Мы видим, что фильтр добавился, но вместо зелёного кружка у него красный треугольник.				<br>				Как и обычно, переключим этот фильтр в положение "Request:-".				<br><img src='i2/R7.png'><br><br>				Теперь мы снова можем зайти на yandex.ru и translate.yandex.ru, однако не можем на другие сайты.<br>				Фильтр "Request:-" в режиме исполнения на листьях(красный треугольник) автоматически применил к самым подчинённым правилам (листам) фильтр "Request:-".<br>				То есть его работа эквивалента работе этих фильтров:				<br><img src='i2/R3.png'><br><br>				Действительно, правила "translate" и "www" не имеют потомков и нигде не переопределено поведение фильтра Request с помощью других фильтров Request (в режиме исполнения на листьях). Поэтому для этих правил автоматически установлен фильтр "Request:-" (в режиме немедленного исполнения).<br>				При этом для правила с условием "td[:1]=yandex.ru" фильтр "Request:-" автоматически не устанавливается: так как это правило имеет потомков.				<br><br>				Если мы хотим иметь практическую применимость правил, то эти правила не годятся. Нужно что-то такое:				<br><img src='i2/R8.png'><br><br>				Эти правила позволят отфильтровывать ненужные запросы к другим доменам и, в то же время, разрешать запросы к доменам Yandex, без них сервисы Yandex не будут работать.<br>				Как видим, и здесь мы можем не указывать фильтры "Request:-", так как на верхнем правиле указан фильтр "Request:-" с применением на листьях.<br><br>				Если мы хотим работать с сервисами yandex.ru без авторизации, то мы можем также попробовать запретить установку куков для всех разрешённых правил.				<br>Нам нужно либо установить на двух нижних правилах фильтры "hCookies:+", запрещающие куки, либо установить один фильтр "hCookies:+" в режиме исполнения на листьях в верхнем правиле. Вот так: 				<br><img src='i2/R9.png'><br><br>				Если подчинённых правил много, то наблюдается существенная экономия времени: вместо установления всех фильтров на листьях вручную теперь нужно установить только один фильтр на главном правиле.				<br><br>				Представим себе, что мы хотим работать с почтовым сервисом mail.yandex.ru , естественно, с авторизацией. Тогда нам нужно будет переопределить блокировку hCookies для почтового сервиса (и разрешить сам почтовый сервис).				<br><img src='i2/R10.png'><br><br>				Фильтр hCookies в правиле "mail" расположен в более подчинённом правиле, чем основной фильтр hCookies. Поэтому более подчинённый фильтр переопределяет верхний. Теперь мы можем зайти на mail.yandex.ru и работать там с авторизацией.																<br><br><hr><br><br>																Режим логирования.<br>				Все фильтры, по умолчанию, не логируются.<br>				Срабатывания фильтров с <img src='i2/log+.png' />красным "прицелом" логируются. Срабатывания фильтров с <img src='i2/log-.png' /> ноликом не определяют режим логирования (нейтральный режим логирования).<br>				Если режим определён как <img src='i2/logx.png' /> (крест), фильтр не будет логироваться (режим отмены логирования).<br>								<br><br>				Конфликты между различными настройками логирования одного фильтра определяются по правилам, аналогичным правилам приоритетов срабатывания фильтров.				<br>То есть, если мы поставим всем фильтрам Request:+ режим логирования (<img src='i2/log+.png' />), а всем фильтрам Request:- режим отмены логирования (<img src='i2/logx.png' />), то срабатывание Request:+ произойдёт тогда же, когда он будет залогирован, а срабатывание Request:- никогда не будет залогировано. Причём в случае конфликта фильтров, срабатывания будут залогированы только в том случае, если Request:+ имел более высокий приоритет (по приоритету правила) и заблокировал запрос.<br>				Режим <img src='i2/log++.png' /> определяет режим приоритетного логирования, режим <img src='i2/logxx.png' /> определяет режим приоритетной отмены логирования. Они тажке работают по обычным для фильтров правилам приоритетов, однако если применён режим приоритетного логирования/отмены логирования, то неприоритетные режимы будут игнорироваться. То есть <img src='i2/log++.png' />Request:+ и <img src='i2/logxx.png' />Request:- дадут аналогичную описанной выше картину, но при этом все <img src='i2/log+.png' /> и <img src='i2/logx.png' /> будут проигнорированы, даже если имеют более высокий приоритет правила.				<br><br>				Фильтры могут быть определены как ничего не делающие, например, Request:0 с установленным режимом логирования. Тогда этот фильтр считается определяющим именно режим логирования (скажем, если что-то из заблокированного контента мы хотим не логировать или наоборот, логировать, но не хотим переопределять режим работы фильтра Request, который уже установлен верно).<br>				Логируются все фильтры запроса, если хотя бы один из них подлежит логированию.				<br><br><br>				Допустим, мы хотим заходить только на yandex.ru , но пока у нас нет никаких фильтров. Зайдём на https://yandex.ru и дождёмся полной загрузки страницы.				<br>				Затем нажмём на средную строку пустого правила, как будто хотим ввести условие правила. Затем нажмём клавишу F9.				<br><img src='i2/logs1.png'><br><br>				Получим что-то такое:				<br><img src='i2/logs2.png'><br><br>				Обратим внимание на правило с условием "rd[:1]=tns-counter.ru". Это правило автоматически сгенерированно для домена, с которого происходит подгрузка счётчиков посещяемости. Хотя мы могли бы использовать это правило для блокирования счётчика прямо в правиле для домена yandex.ru, счётчик можно было бы заблокировать и вообще, глобально. То есть мы можем сделать такое правило:				<br><img src='i2/logs3.png'><br><br>				Сделаем правило, блокирующее все запросы (с приоритетом 6, ниже чем у правил для yandex.ru).				<br><img src='i2/logs4.png'><br><br>				Разрешим запросы на yandex.ru.				<br><img src='i2/logs5.png'><br><br>				Но, всё-таки, хочется видеть, что именно мы заблокировали в логе, а сейчас в логе нет ни одной блокировки.				<br><img src='i2/logs6.png'><br><br>				Теперь в логе я вижу, что именно заблокировано. Я могу исправить ошибки, если они есть. Например, я не включил правило с именем "1.!=", и не задал верную структуру правил для срабатывания фильтра с исполнением на листьях. И теперь вижу в логе соответствующую проблему. Исправив ошибки я снова посмотрю лог.				<br><img src='i2/logs7.png'><br><br>				Теперь я включил соответствующее правило и добавил к правилам yastatic.net и yandex.net пустые включённые правила (чтобы не заморачиваться с разблокировкой каждого поддомена, я таким образом разблокирую все запросы к хостам на этих доменах).				<br><img src='i2/logs7.png'><br><br>				Как видим, логирование важно. Что я теперь вижу в логе?				<br><img src='i2/logs8.png'><br><br>				Теперь я вижу только те блокировки, которые и хотел. Это mc.yandex.ru и tns-counter.ru. Допустим, я не хочу видеть tns-counter.ru.				<br>				Тогда, на правиле с блокировкой этого домена я поставлю приоритетную отмену логирования.				<br><img src='i2/logs9.png'><br><br>				<br><img src='i2/logs10.png'><br><br>				Теперь в логе заблокированные запросы к tns-counter.ru мы не видим.				<br><br><br><br>				<!--#include file="_menu.inc"-->				<br><br>
<DIV></DIV><!--#include file="mcyandex.inc"-->
</BODY>
</html>
